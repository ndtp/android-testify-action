name: 'Android Testify Action'
description: 'GitHub Action for running Android Testify screenshot tests'
author: 'ndtp'

inputs:

  api-level:
    description: API level of the platform and system image - e.g. 23 for Android Marshmallow, 29 for Android 10
    default: 29
    required: true

  target:
    description: Target of the system image - default, google_apis, google_apis_playstore, aosp_atd, google_atd, android-wear, android-wear-cn, android-tv or google-tv
    default: google_apis
    required: true

  arch:
    description: CPU architecture of the system image - x86, x86_64 or arm64-v8a
    default: x86_64
    required: true

  profile:
    description: hardware profile used for creating the AVD - e.g. `Nexus 6`
    default: pixel_3a
    required: true

  module:
    description: The gradle project module name. e.g. `:app`
    default: ":app"
    required: true

  app_apk:
    description: The full path to the application apk under test. For library projects, this will be the test apk.
    required: true

  app_package:
    description: The package name of the app. For example, `com.sample`
    required: true

  test_apk:
    description: The file name of the test runner .apk
    required: true

  test_package:
    description: The package name of test runner .apk
    required: true

  test_runner:
    description: The fully qualified class name for the Instrumentation test runner. e.g. `androidx.test.runner.AndroidJUnitRunner`
    required: true

  shard_count:
    description: "The total number of test execution shards to use."
    default: 0
    required: false

  shard_index:
    description: "Current shard index to run for testing."
    default: 0
    required: false

  device_density:
    description: DPI value to set on the emulator
    default: 0
    required: false

  animations:
    description: Enable animations on the emulator
    default: false
    required: false

  show_ime_with_hard_keyboard:
    description: Show the onscreen keyboard (IME)
    default: false
    required: false

  show_passwords:
    description: Show password entry characters
    default: false
    required: false

  verbose:
    description: You can enable the verbose log for easier debugging.
    default: false
    required: false

runs:
  using: 'composite'
  steps:
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: 17

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Enable KVM
      uses: ndtp/enable-kvm-action@v1

    - name: Boot emulator
      uses: ndtp/android-emulator-runner@v4
      with:
        api-level: ${{ inputs.api-level }}
        arch: ${{ inputs.arch }}
        target: ${{ inputs.target }}
        profile: ${{ inputs.profile }}
        script: adb devices

    - name: Run instrumentation tests
      uses: ndtp/android-instrumentation-test-runner@main
      with:
        app_apk: ${{ inputs.app_apk }}
        app_package: ${{ inputs.app_package }}
        test_apk: ${{ inputs.test_apk }}
        test_package: ${{ inputs.test_package }}
        test_runner: ${{ inputs.test_runner }}
        shard_count: ${{ inputs.shard_count }}
        shard_index: ${{ inputs.shard_index }}
        verbose: ${{ inputs.verbose }}
        annotation: "annotation dev.testify.annotation.ScreenshotInstrumentation"

    # - name: Run screenshot tests
    #   uses: reactivecircus/android-emulator-runner@v2
    #   with:
    #     api-level: ${{ inputs.api-level }}
    #     arch: ${{ inputs.arch }}
    #     target: ${{ inputs.target }}
    #     profile: ${{ inputs.profile }}
    #     script: |
    #       echo "Emulator is loaded"
    #       adb logcat >> screenshot-test-logcat.log &
    #       "${{ github.action_path }}/action.sh" ${{ inputs.animations }} ${{ inputs.app_apk }} ${{ inputs.app_package }} ${{ inputs.device_density }} ${{ inputs.module }} ${{ inputs.show_ime_with_hard_keyboard }} ${{ inputs.show_passwords }} ${{ inputs.test_apk }} ${{ inputs.test_package }} ${{ inputs.test_runner }} ${{ inputs.shard_count }} ${{ inputs.shard_index }} ${{ inputs.verbose }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshot-test-results-${{ inputs.shard_index }}
        path: |
          screenshot-test-logcat.log
          ./output/
          ./reports/*.xml

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Screenshot Tests ${{ inputs.shard_index }}
        path: "./reports/*.xml"
        reporter: java-junit

branding:
  icon: 'check-circle'
  color: 'green'
